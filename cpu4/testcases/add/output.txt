VCD info: dumpfile SoC.vcd opened for output.

000c: read instruction
  0c
000d: read 2nd byte
  0c 09
    ld r0, #09
    reg[00] = 09

000e: read instruction
  1c
000f: read 2nd byte
  1c 01
    ld r1, #01
    reg[01] = 01

0010: read instruction
  02
0011: read 2nd byte
  02 01
    add r0, r1
    alu:    09       01    =>    0a
         00001001 00000001 => 00001010
    flags = 0000_0000
    reg[00] = 0a

0012: read instruction
  1c
0013: read 2nd byte
  1c 06
    ld r1, #06
    reg[01] = 06

0014: read instruction
  02
0015: read 2nd byte
  02 01
    add r0, r1
    alu:    0a       06    =>    10
         00001010 00000110 => 00010000
    flags = 0000_0100
    reg[00] = 10

0016: read instruction
  1c
0017: read 2nd byte
  1c 80
    ld r1, #80
    reg[01] = 80

0018: read instruction
  02
0019: read 2nd byte
  02 01
    add r0, r1
    alu:    10       80    =>    90
         00010000 10000000 => 10010000
    flags = 0010_0000
    reg[00] = 90

001a: read instruction
  1c
001b: read 2nd byte
  1c 70
    ld r1, #70
    reg[01] = 70

001c: read instruction
  02
001d: read 2nd byte
  02 01
    add r0, r1
    alu:    90       70    =>    00
         10010000 01110000 => 00000000
    flags = 1100_0000
    reg[00] = 00

001e: read instruction
  0c
001f: read 2nd byte
  0c ff
    ld r0, #ff
    reg[00] = ff

0020: read instruction
  1c
0021: read 2nd byte
  1c ff
    ld r1, #ff
    reg[01] = ff

0022: read instruction
  02
0023: read 2nd byte
  02 10
    add r1, r0
    alu:    ff       ff    =>    fe
         11111111 11111111 => 11111110
    flags = 1010_0100
    reg[01] = fe

0024: read instruction
  8d
0025: read 2nd byte
  8d 00
0026: read 3rd byte
  8d 00 0c
    jmp    , 000c

000c: read instruction
testSoC: SUCCESS
  0c
