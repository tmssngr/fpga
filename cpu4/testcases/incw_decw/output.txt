VCD info: dumpfile SoC.vcd opened for output.

0000: read instruction
  e6
0001: read 2nd byte
  e6 10
0002: read 3rd byte
  e6 10 01
    ld 10, #01
    reg[10] = 01

0003: read instruction
  e6
0004: read 2nd byte
  e6 11
0005: read 3rd byte
  e6 11 02
    ld 11, #02
    reg[11] = 02

0006: read instruction
  a0
0007: read 2nd byte
  a0 10
    incw 10
    alu:    02       00    =>    03
         00000010 00000000 => 00000011
    flags = 0000_0000
    reg[11] = 03
    alu:    01       00    =>    01
         00000001 00000000 => 00000001
    flags = 0000_0000
    reg[10] = 01

0008: read instruction
  80
0009: read 2nd byte
  80 10
    decw 10
    alu:    03       00    =>    02
         00000011 00000000 => 00000010
    flags = 0000_0000
    reg[11] = 02
    alu:    01       00    =>    01
         00000001 00000000 => 00000001
    flags = 0000_0000
    reg[10] = 01

000a: read instruction
  e6
000b: read 2nd byte
  e6 11
000c: read 3rd byte
  e6 11 7f
    ld 11, #7f
    reg[11] = 7f

000d: read instruction
  a0
000e: read 2nd byte
  a0 10
    incw 10
    alu:    7f       00    =>    80
         01111111 00000000 => 10000000
    flags = 0011_0000
    reg[11] = 80
    alu:    01       00    =>    01
         00000001 00000000 => 00000001
    flags = 0000_0000
    reg[10] = 01

000f: read instruction
  80
0010: read 2nd byte
  80 10
    decw 10
    alu:    80       00    =>    7f
         10000000 00000000 => 01111111
    flags = 0001_0000
    reg[11] = 7f
    alu:    01       00    =>    01
         00000001 00000000 => 00000001
    flags = 0000_0000
    reg[10] = 01

0011: read instruction
  e6
0012: read 2nd byte
  e6 11
0013: read 3rd byte
  e6 11 ff
    ld 11, #ff
    reg[11] = ff

0014: read instruction
  a0
0015: read 2nd byte
  a0 10
    incw 10
    alu:    ff       00    =>    00
         11111111 00000000 => 00000000
    flags = 0100_0000
    reg[11] = 00
    alu:    01       00    =>    02
         00000001 00000000 => 00000010
    flags = 0000_0000
    reg[10] = 02

0016: read instruction
  80
0017: read 2nd byte
  80 10
    decw 10
    alu:    00       00    =>    ff
         00000000 00000000 => 11111111
    flags = 0010_0000
    reg[11] = ff
    alu:    02       00    =>    01
         00000010 00000000 => 00000001
    flags = 0000_0000
    reg[10] = 01

0018: read instruction
  e6
0019: read 2nd byte
  e6 10
001a: read 3rd byte
  e6 10 ff
    ld 10, #ff
    reg[10] = ff

001b: read instruction
  a0
001c: read 2nd byte
  a0 10
    incw 10
    alu:    ff       00    =>    00
         11111111 00000000 => 00000000
    flags = 0100_0000
    reg[11] = 00
    alu:    ff       00    =>    00
         11111111 00000000 => 00000000
    flags = 0100_0000
    reg[10] = 00

001d: read instruction
  a0
001e: read 2nd byte
  a0 10
    incw 10
    alu:    00       00    =>    01
         00000000 00000000 => 00000001
    flags = 0000_0000
    reg[11] = 01
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0000_0000
    reg[10] = 00

001f: read instruction
  80
0020: read 2nd byte
  80 10
    decw 10
    alu:    01       00    =>    00
         00000001 00000000 => 00000000
    flags = 0100_0000
    reg[11] = 00
    alu:    00       00    =>    00
         00000000 00000000 => 00000000
    flags = 0100_0000
    reg[10] = 00

0021: read instruction
  80
0022: read 2nd byte
  80 10
    decw 10
    alu:    00       00    =>    ff
         00000000 00000000 => 11111111
    flags = 0010_0000
    reg[11] = ff
    alu:    00       00    =>    ff
         00000000 00000000 => 11111111
    flags = 0010_0000
    reg[10] = ff

0023: read instruction
  8d
0024: read 2nd byte
  8d 00
0025: read 3rd byte
  8d 00 00
    jmp    , 0000

0000: read instruction
testSoC: SUCCESS
